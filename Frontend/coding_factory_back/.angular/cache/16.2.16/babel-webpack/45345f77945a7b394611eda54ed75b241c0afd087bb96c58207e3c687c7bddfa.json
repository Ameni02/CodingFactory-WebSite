{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let CourseComponent = class CourseComponent {\n  constructor() {\n    this.courses = [];\n    this.newCourse = {\n      id: 0,\n      title: '',\n      description: '',\n      duration: 0,\n      isArchived: false,\n      file: null\n    };\n    this.showCourseList = false; // Variable pour afficher ou masquer la liste\n  }\n\n  ngOnInit() {\n    // Données fictives pour l'exemple\n    this.courses = [{\n      id: 1,\n      title: 'Formation Angular',\n      description: 'Apprendre Angular',\n      duration: 20,\n      isArchived: false,\n      file: null\n    }, {\n      id: 2,\n      title: 'Formation Java',\n      description: 'Apprendre Java',\n      duration: 30,\n      isArchived: false,\n      file: null\n    }];\n  }\n  // Ajouter une nouvelle formation\n  addCourse(fileInput) {\n    if (this.newCourse.title && this.newCourse.description && this.newCourse.duration > 0) {\n      const courseToAdd = {\n        ...this.newCourse,\n        file: fileInput ? fileInput.files[0] : null\n      };\n      courseToAdd.id = this.courses.length + 1; // Définir un id unique\n      this.courses.push(courseToAdd);\n      // Réinitialiser les champs du formulaire\n      this.newCourse = {\n        id: 0,\n        title: '',\n        description: '',\n        duration: 0,\n        isArchived: false,\n        file: null\n      };\n    }\n  }\n  // Supprimer une formation\n  deleteCourse(course) {\n    this.courses = this.courses.filter(c => c.id !== course.id);\n  }\n  // Archiver une formation\n  archiveCourse(course) {\n    course.isArchived = true;\n  }\n  // Désarchiver une formation\n  unarchiveCourse(course) {\n    course.isArchived = false;\n  }\n  // Afficher ou masquer la liste des formations\n  toggleCourseList() {\n    this.showCourseList = !this.showCourseList;\n  }\n};\nCourseComponent = __decorate([Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})], CourseComponent);","map":{"version":3,"names":["Component","CourseComponent","constructor","courses","newCourse","id","title","description","duration","isArchived","file","showCourseList","ngOnInit","addCourse","fileInput","courseToAdd","files","length","push","deleteCourse","course","filter","c","archiveCourse","unarchiveCourse","toggleCourseList","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\HP\\Desktop\\CodingFactory-WebSite\\Frontend\\coding_factory_back\\src\\app\\Modules\\Courses\\course\\course.component.ts"],"sourcesContent":["import { Component , OnInit } from '@angular/core';\nimport { Course } from '../models/course.model';\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent  {\n  courses: Course[] = [];\n  newCourse: Course = { id: 0, title: '', description: '', duration: 0, isArchived: false, file: null };\n\n \n  showCourseList: boolean = false;  // Variable pour afficher ou masquer la liste\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // Données fictives pour l'exemple\n    this.courses = [\n      { id: 1, title: 'Formation Angular', description: 'Apprendre Angular', duration: 20, isArchived: false, file: null },\n      { id: 2, title: 'Formation Java', description: 'Apprendre Java', duration: 30, isArchived: false, file: null },\n    ];\n  }\n\n  // Ajouter une nouvelle formation\n  addCourse(fileInput: any): void {\n    if (this.newCourse.title && this.newCourse.description && this.newCourse.duration > 0) {\n      const courseToAdd: Course = {\n        ...this.newCourse,\n        file: fileInput ? fileInput.files[0] : null\n      };\n      courseToAdd.id = this.courses.length + 1; // Définir un id unique\n      this.courses.push(courseToAdd);\n      // Réinitialiser les champs du formulaire\n      this.newCourse = { id: 0, title: '', description: '', duration: 0, isArchived: false, file: null };\n    }\n  }\n\n  // Supprimer une formation\n  deleteCourse(course: Course): void {\n    this.courses = this.courses.filter(c => c.id !== course.id);\n  }\n\n  // Archiver une formation\n  archiveCourse(course: Course): void {\n    course.isArchived = true;\n  }\n\n  // Désarchiver une formation\n  unarchiveCourse(course: Course): void {\n    course.isArchived = false;\n  }\n\n  // Afficher ou masquer la liste des formations\n  toggleCourseList(): void {\n    this.showCourseList = !this.showCourseList;\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAiB,eAAe;AAO3C,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAO1BC,YAAA;IANA,KAAAC,OAAO,GAAa,EAAE;IACtB,KAAAC,SAAS,GAAW;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE,EAAE;MAAEC,QAAQ,EAAE,CAAC;MAAEC,UAAU,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAI,CAAE;IAGrG,KAAAC,cAAc,GAAY,KAAK,CAAC,CAAE;EAEnB;;EAEfC,QAAQA,CAAA;IACN;IACA,IAAI,CAACT,OAAO,GAAG,CACb;MAAEE,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,mBAAmB;MAAEC,WAAW,EAAE,mBAAmB;MAAEC,QAAQ,EAAE,EAAE;MAAEC,UAAU,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAI,CAAE,EACpH;MAAEL,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,gBAAgB;MAAEC,WAAW,EAAE,gBAAgB;MAAEC,QAAQ,EAAE,EAAE;MAAEC,UAAU,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAI,CAAE,CAC/G;EACH;EAEA;EACAG,SAASA,CAACC,SAAc;IACtB,IAAI,IAAI,CAACV,SAAS,CAACE,KAAK,IAAI,IAAI,CAACF,SAAS,CAACG,WAAW,IAAI,IAAI,CAACH,SAAS,CAACI,QAAQ,GAAG,CAAC,EAAE;MACrF,MAAMO,WAAW,GAAW;QAC1B,GAAG,IAAI,CAACX,SAAS;QACjBM,IAAI,EAAEI,SAAS,GAAGA,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC,GAAG;OACxC;MACDD,WAAW,CAACV,EAAE,GAAG,IAAI,CAACF,OAAO,CAACc,MAAM,GAAG,CAAC,CAAC,CAAC;MAC1C,IAAI,CAACd,OAAO,CAACe,IAAI,CAACH,WAAW,CAAC;MAC9B;MACA,IAAI,CAACX,SAAS,GAAG;QAAEC,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,QAAQ,EAAE,CAAC;QAAEC,UAAU,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAI,CAAE;;EAEtG;EAEA;EACAS,YAAYA,CAACC,MAAc;IACzB,IAAI,CAACjB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACkB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACjB,EAAE,KAAKe,MAAM,CAACf,EAAE,CAAC;EAC7D;EAEA;EACAkB,aAAaA,CAACH,MAAc;IAC1BA,MAAM,CAACX,UAAU,GAAG,IAAI;EAC1B;EAEA;EACAe,eAAeA,CAACJ,MAAc;IAC5BA,MAAM,CAACX,UAAU,GAAG,KAAK;EAC3B;EAEA;EACAgB,gBAAgBA,CAAA;IACd,IAAI,CAACd,cAAc,GAAG,CAAC,IAAI,CAACA,cAAc;EAC5C;CACD;AAlDYV,eAAe,GAAAyB,UAAA,EAL3B1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACW5B,eAAe,CAkD3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}