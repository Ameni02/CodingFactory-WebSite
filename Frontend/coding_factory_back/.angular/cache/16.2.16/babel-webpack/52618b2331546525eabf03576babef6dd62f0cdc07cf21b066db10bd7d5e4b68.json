{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AjoutFormationComponent = class AjoutFormationComponent {\n  constructor(courseService) {\n    this.courseService = courseService;\n    this.newCourse = {\n      id: 0,\n      title: '',\n      description: '',\n      duration: 0,\n      isArchived: false,\n      file: null\n    };\n    this.selectedFile = null;\n  }\n  onFileSelected(event) {\n    if (event.target.files.length > 0) {\n      this.selectedFile = event.target.files[0];\n    }\n  }\n  addCourse() {\n    if (!this.selectedFile) {\n      alert('Veuillez sélectionner un fichier PDF.');\n      return;\n    }\n    const courseToAdd = {\n      ...this.newCourse,\n      file: this.selectedFile,\n      id: Math.floor(Math.random() * 1000) // Random id for the course (in real applications, the backend should handle this)\n    };\n    // Add the course via the service\n    this.courseService.addCourse(courseToAdd);\n    console.log('Formation ajoutée avec succès !', courseToAdd);\n    alert('Formation ajoutée avec succès !');\n    // Réinitialisation du formulaire\n    this.resetForm();\n  }\n  resetForm() {\n    this.newCourse = {\n      id: 0,\n      title: '',\n      description: '',\n      duration: 0,\n      isArchived: false,\n      file: null\n    };\n    this.selectedFile = null;\n  }\n};\nAjoutFormationComponent = __decorate([Component({\n  selector: 'app-ajout-formation',\n  templateUrl: './ajout-formation.component.html',\n  styleUrls: ['./ajout-formation.component.css']\n})], AjoutFormationComponent);","map":{"version":3,"names":["Component","AjoutFormationComponent","constructor","courseService","newCourse","id","title","description","duration","isArchived","file","selectedFile","onFileSelected","event","target","files","length","addCourse","alert","courseToAdd","Math","floor","random","console","log","resetForm","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\HP\\Desktop\\CodingFactory-WebSite\\Frontend\\coding_factory_back\\src\\app\\Modules\\Courses\\ajout-formation\\ajout-formation.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CourseService } from 'src/app/Modules/Courses/course.service';\nimport { Course } from 'src/app/Modules/Courses/models/course.model';\n\n@Component({\n  selector: 'app-ajout-formation',\n  templateUrl: './ajout-formation.component.html',\n  styleUrls: ['./ajout-formation.component.css']\n})\nexport class AjoutFormationComponent {\n  newCourse: Course = {\n    id: 0,\n    title: '',\n    description: '',\n    duration: 0,\n    isArchived: false,\n    file: null\n  };\n  selectedFile: File | null = null;\n\n  constructor(private courseService: CourseService) {}\n\n  onFileSelected(event: any) {\n    if (event.target.files.length > 0) {\n      this.selectedFile = event.target.files[0];\n    }\n  }\n\n  addCourse() {\n    if (!this.selectedFile) {\n      alert('Veuillez sélectionner un fichier PDF.');\n      return;\n    }\n\n    const courseToAdd: Course = {\n      ...this.newCourse,\n      file: this.selectedFile,\n      id: Math.floor(Math.random() * 1000)  // Random id for the course (in real applications, the backend should handle this)\n    };\n\n    // Add the course via the service\n    this.courseService.addCourse(courseToAdd);\n\n    console.log('Formation ajoutée avec succès !', courseToAdd);\n    alert('Formation ajoutée avec succès !');\n\n    // Réinitialisation du formulaire\n    this.resetForm();\n  }\n\n  resetForm() {\n    this.newCourse = { id: 0, title: '', description: '', duration: 0, isArchived: false, file: null };\n    this.selectedFile = null;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAWlCC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAVjC,KAAAC,SAAS,GAAW;MAClBC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,CAAC;MACXC,UAAU,EAAE,KAAK;MACjBC,IAAI,EAAE;KACP;IACD,KAAAC,YAAY,GAAgB,IAAI;EAEmB;EAEnDC,cAAcA,CAACC,KAAU;IACvB,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACjC,IAAI,CAACL,YAAY,GAAGE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;;EAE7C;EAEAE,SAASA,CAAA;IACP,IAAI,CAAC,IAAI,CAACN,YAAY,EAAE;MACtBO,KAAK,CAAC,uCAAuC,CAAC;MAC9C;;IAGF,MAAMC,WAAW,GAAW;MAC1B,GAAG,IAAI,CAACf,SAAS;MACjBM,IAAI,EAAE,IAAI,CAACC,YAAY;MACvBN,EAAE,EAAEe,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAAC,CAAE;KACvC;IAED;IACA,IAAI,CAACnB,aAAa,CAACc,SAAS,CAACE,WAAW,CAAC;IAEzCI,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEL,WAAW,CAAC;IAC3DD,KAAK,CAAC,iCAAiC,CAAC;IAExC;IACA,IAAI,CAACO,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACrB,SAAS,GAAG;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,WAAW,EAAE,EAAE;MAAEC,QAAQ,EAAE,CAAC;MAAEC,UAAU,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAI,CAAE;IAClG,IAAI,CAACC,YAAY,GAAG,IAAI;EAC1B;CACD;AA7CYV,uBAAuB,GAAAyB,UAAA,EALnC1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACW5B,uBAAuB,CA6CnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}